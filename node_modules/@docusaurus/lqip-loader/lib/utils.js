"use strict";
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.toPalette = exports.toBase64 = void 0;
const lodash_1 = require("lodash");
/**
 * it returns a Base64 image string with required formatting
 * to work on the web (<img src=".." /> or in CSS url('..'))
 */
const toBase64 = (extMimeType, data) => `data:${extMimeType};base64,${data.toString('base64')}`;
exports.toBase64 = toBase64;
/**
 * takes a color swatch object, converts it to an array & returns
 * only hex color
 */
const toPalette = (swatch) => {
    let palette = Object.keys(swatch).reduce((result, key) => {
        if (swatch[key] !== null) {
            result.push({
                popularity: swatch[key].getPopulation(),
                hex: swatch[key].getHex(),
            });
        }
        return result;
    }, []);
    palette = (0, lodash_1.sortBy)(palette, ['popularity']);
    return palette.map((color) => color.hex).reverse();
};
exports.toPalette = toPalette;
